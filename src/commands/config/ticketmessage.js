const Discord = require('discord.js');

const Schema = require("../../database/models/ticketMessage");

module.exports = async (client, interaction, args) => {
    const perms = await client.checkUserPerms({
        flags: [Discord.PermissionsBitField.Flags.ManageMessages],
        perms: [Discord.PermissionsBitField.Flags.ManageMessages]
    }, interaction)

    if (perms == false) return;

    const type = interaction.options.getString('type');
    const message = interaction.options.getString('message');

    if (type == "open") {
        if (message.toUpperCase() == "DEFAULT") {
            const data = await Schema.findOne({ Guild: interaction.guild.id })

            if (data) {
                data.openTicket = "–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –±–∏–ª–µ—Ç–∞! \n–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è \n\nüîí - –ó–∞–∫—Ä—ã—Ç—å –±–∏–ª–µ—Ç \n‚úã - –í–∑—è—Ç—å –±–∏–ª–µ—Ç \nüìù - –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∏–∞–ª–æ–≥ \nüîî - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ";
                data.save();

                client.succNormal({
                    text: `–°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–∏–∫–µ—Ç–µ –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ`,
                    fields: [
                        {
                            name: `üìò‚îÜ–¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è`,
                            value: `${type}`,
                            inline: true
                        },
                        {
                            name: `üí¨‚îÜ–°–æ–æ–±—â–µ–Ω–∏–µ`,
                            value: `${data.openTicket}`,
                            inline: true
                        },
                    ],
                    type: 'editreply'
                }, interaction)
            }
            else {
                client.errNormal({
                    error: `–î–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç–∏–∫–µ—Ç–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!`,
                    type: 'editreply'
                }, interaction)
            }

            return;
        }

        Schema.findOne({ Guild: interaction.guild.id }, async (err, data) => {
            if (data) {
                data.openTicket = message;
                data.save();
            }
            else {
                new Schema({
                    Guild: interaction.guild.id,
                    openTicket: message
                }).save();
            }
        })

        client.succNormal({
            text: `–°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–∏–∫–µ—Ç–µ –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ`,
            fields: [
                {
                    name: `üìò‚îÜ–¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è`,
                    value: `${type}`,
                    inline: true
                },
                {
                    name: `üí¨‚îÜ–°–æ–æ–±—â–µ–Ω–∏–µ`,
                    value: `${message}`,
                    inline: true
                },
            ],
            type: 'editreply'
        }, interaction)
    }
    else if (type == "close") {
        if (message.toUpperCase() == "DEFAULT") {
            const data = await Schema.findOne({ Guild: interaction.guild.id })

            if (data) {
                data.dmMessage = "–í–æ—Ç —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –≤–∞—à–µ–≥–æ –±–∏–ª–µ—Ç–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–µ, –µ—Å–ª–∏ –≤—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –∑–∞—Ö–æ—Ç–∏—Ç–µ –∫ –Ω–µ–π –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è!";
                data.save();

                client.succNormal({
                    text: `–°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–∏–∫–µ—Ç–µ –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ`,
                    fields: [
                        {
                            name: `üìò‚îÜ–¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è`,
                            value: `${type}`,
                            inline: true
                        },
                        {
                            name: `üí¨‚îÜ–°–æ–æ–±—â–µ–Ω–∏–µ`,
                            value: `${data.dmMessage}`,
                            inline: true
                        },
                    ],
                    type: 'editreply'
                }, interaction)
            }
            else {
                client.errNormal({
                    error: `–î–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç–∏–∫–µ—Ç–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!`,
                    type: 'editreply'
                }, interaction)
            }

            return;
        }

        Schema.findOne({ Guild: interaction.guild.id }, async (err, data) => {
            if (data) {
                data.dmMessage = message;
                data.save();
            }
            else {
                new Schema({
                    Guild: interaction.guild.id,
                    dmMessage: message
                }).save();
            }
        })

        client.succNormal({
            text: `–°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–∏–∫–µ—Ç–µ –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ`,
            fields: [
                {
                    name: `üìò‚îÜ–¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è`,
                    value: `${type}`,
                    inline: true
                },
                {
                    name: `üí¨‚îÜ–°–æ–æ–±—â–µ–Ω–∏–µ`,
                    value: `${message}`,
                    inline: true
                },
            ],
            type: 'editreply'
        }, interaction)
    }
}

 