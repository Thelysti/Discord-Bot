const Discord = require('discord.js');

const Schema = require("../../database/models/suggestionChannels");

module.exports = async (client, interaction, args) => {
    const perms = await client.checkUserPerms({
        flags: [Discord.PermissionsBitField.Flags.ManageMessages],
        perms: [Discord.PermissionsBitField.Flags.ManageMessages]
    }, interaction)

    if (perms == false) return;

    const messageID = interaction.options.getString('id');

    const data = await Schema.findOne({ Guild: interaction.guild.id });
    if (data) {
        const suggestionchannel = interaction.guild.channels.cache.get(data.Channel);
        const suggestEmbed = await suggestionchannel.messages.fetch(messageID);
        const embedData = suggestEmbed.embeds[0];

        client.embed({
            title: `${client.emotes.normal.check}„Éª–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ–¥–æ–±—Ä–µ–Ω–æ`,
            desc: `\`\`\`${embedData.description}\`\`\``,
            color: client.config.colors.succes,
            author: {
                name: embedData.author.name,
                iconURL: embedData.author.iconURL
            },
            type: 'edit'
        }, suggestEmbed)

        try {
            const user = await client.users.cache.find((u) => u.tag === embedData.author.name);

            if (user) {
                client.embed({
                    title: `${client.emotes.normal.check}„Éª–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ–¥–æ–±—Ä–µ–Ω–æ`,
                    desc: `–í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ${interaction.guild.name} –±—ã–ª–æ –æ–¥–æ–±—Ä–µ–Ω–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π!`,
                    fields: [
                        {
                            name: `üí¨‚îÜ–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ`,
                            value: `${embedData.description}`
                        }
                    ],
                }, user).catch({})
            }
        }
        catch { }

        client.succNormal({
            text: "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±—ã–ª–æ –æ–¥–æ–±—Ä–µ–Ω–æ",
            fields: [
                {
                    name: `üí¨‚îÜ–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ`,
                    value: `${embedData.description}`
                }
            ],
            type: 'editreply'
        }, interaction);
    }
    else {
        client.errNormal({
            error: `–ù–µ —É–∫–∞–∑–∞–Ω –∫–∞–Ω–∞–ª, –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –µ–≥–æ!`,
            type: 'editreply'
        }, interaction);
    }
}

 